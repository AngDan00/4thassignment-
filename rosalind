1)dna
from collections import Counter
file=open("rosalind_dna.txt")
line=file.readlines()
dna=sorted(list(map(str,line[0].strip())))
dna=Counter(dna)
for i in dna.values():
    print(i,end=' ')
    
2)rna
file=open("rosalind_rna.txt")
line=file.readlines()
print(str(line[0]).replace('T','U'))

3)revc
complement = {'A': 'T', 'C': 'G', 'G': 'C', 'T': 'A'} 
file=open("rosalind_revc.txt")
line=file.readlines()
rna=list(map(str,line[0].strip()))[::-1]
rev=[complement[i] for i in rna]
for i in rev:
    print(i,end='')

4)gc
from collections import Counter
from Bio import SeqIO
lst=[]
d={}
with open("rosalind_gc.txt", "r") as handle:
    for seq in SeqIO.parse(handle, "fasta"):
        id=seq.id
        seq=seq.seq
        dseq=Counter(seq)
        gc=(dseq.get('G')+dseq.get('C'))/len(seq)*100
        lst.append(gc)
        maxgc=max(lst)
        d[gc]=id
print(d.get(maxgc))
print(max(d.keys()))

5)subs
file=open("rosalind_subs.txt")
line=file.readlines()
string=str(line[0].strip())
sub_string=str(line[1].strip())
for i in range(len(string)):
    if string[i:].startswith(sub_string):
        print(i+1,end=' ')
6) cons
import numpy as np
from Bio import SeqIO
counter=0
with open("rosalind_cons.txt", "r") as handle:
    for seq in SeqIO.parse(handle, "fasta"):
        id=seq.id
        seq=seq.seq
        mtx=np.array(seq)
        for i in mtx[:1]:
            if i=='A':
                counter+=1
        print(mtx)
    
